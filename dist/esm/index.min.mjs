/**
 * maptalks通用工具封装 => jUtilsMaptalks
 * @update 2024-10-15 15:43:24
 */
import{renderer,Layer,MultiPolygon,VectorLayer,LineString}from"maptalks";import{merge}from"lodash-es";import axios from"axios";import"@bestime/utils_base";import"lodash";function asyncGeneratorStep(e,t,r,n,o,i,a){try{var s=e[i](a),c=s.value}catch(u){return void r(u)}s.done?t(c):Promise.resolve(c).then(n,o)}function _asyncToGenerator(s){return function(){var e=this,a=arguments;return new Promise(function(t,r){var n=s.apply(e,a);function o(e){asyncGeneratorStep(n,t,r,o,i,"next",e)}function i(e){asyncGeneratorStep(n,t,r,o,i,"throw",e)}o(undefined)})}}function _inheritsLoose(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(e,t){return e.__proto__=t,e})(e,t)}var staticBase,BorderLayer=function(n){function e(e,t,r){e=n.call(this,e,r)||this;return e._config=void 0,e._config=t,e}return _inheritsLoose(e,n),e.prototype.getConfig=function(){return this._config},e}(Layer),BorderLayerRenderer=function(e){function t(){return e.apply(this,arguments)||this}_inheritsLoose(t,e);var r=t.prototype;return r.checkResources=function(){return[]},r.draw=function(){this._drawData(),this.completeRender()},r.drawOnInteracting=function(){this.draw()},r._drawData=function(){var e=this.layer.getConfig(),t=this.getMap().getSize(),r=(this.prepareCanvas(),this.context);r.fillStyle=e.backgroundColor,r.fillRect(0,0,t.width,t.height),r.lineWidth=e.borderWidth,r.strokeStyle=e.borderColor,r.strokeRect(0,0,t.width,t.height)},t}(renderer.CanvasRenderer);function setBaseUrl(e){staticBase=e}function resolveBaseUrl(e){return staticBase+"/readonly-utils_maptalks-static"+e}function requestStaticFile(e){return axios({baseURL:"",url:resolveBaseUrl(e)})}function getPolygonLilst(e){var t=[];return null!=e&&null!=(e=e.features)&&e.forEach(function(e){"MultiPolygon"===e.geometry.type&&(e=new MultiPolygon(e.geometry.coordinates,{properties:e.properties,symbol:{polygonFill:"transparent",lineWidth:1,lineColor:"#ddd"}}),t.push(e))}),t}BorderLayer.registerRenderer("canvas",BorderLayerRenderer);var CityBoundry=function(){function e(e,t){this._layer=void 0;t=merge({zIndex:1,forceRenderOnMoving:!0,forceRenderOnZooming:!0,forceRenderOnRotating:!0},t);this._layer=new VectorLayer(e,t)}var t=e.prototype;return t.setAreaCode=function(){var t=_asyncToGenerator(function*(e){var t=this;yield requestStaticFile("/geos/"+e+"_full.json").then(function(e){e=e.data,e=getPolygonLilst(e);t._layer.clear(),t._layer.addGeometry(e)})});return function(e){return t.apply(this,arguments)}}(),t.addTo=function(e){this._layer.addTo(e)},t.clear=function(){this._layer.clear()},t.dispose=function(){this._layer.clear().remove()},e}(),OffsetLayer=function(n){function e(e,t,r){e=n.call(this,e,t,r)||this;return console.log("新的"),e}return _inheritsLoose(e,n),e}(VectorLayer),HeartbeatLineString=function(r){function e(e,t){return r.call(this,e,t)||this}return _inheritsLoose(e,r),e}(LineString);function main(e){setBaseUrl(e)}HeartbeatLineString.registerJSONType("HeartbeatLineString");export{BorderLayer,CityBoundry,HeartbeatLineString,OffsetLayer,main as default};
