/**
 * maptalks通用工具封装 => jUtilsMaptalks
 * @update 2024-10-15 15:43:24
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("maptalks"),require("lodash-es"),require("axios"),require("@bestime/utils_base"),require("lodash")):"function"==typeof define&&define.amd?define(["exports","maptalks","lodash-es","axios","@bestime/utils_base","lodash"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).jUtilsMaptalks={},e.maptalks,e.lodashEs,e.axios)}(this,function(e,n,r,t){"use strict";function u(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(l){return void r(l)}s.done?t(u):Promise.resolve(u).then(n,o)}function o(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,i(e,t)}function i(e,t){return(i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function i(e,t){return e.__proto__=t,e})(e,t)}var a,s=function(n){function e(e,t,r){e=n.call(this,e,r)||this;return e._config=void 0,e._config=t,e}return o(e,n),e.prototype.getConfig=function(){return this._config},e}(n.Layer),l=function(e){function t(){return e.apply(this,arguments)||this}o(t,e);var r=t.prototype;return r.checkResources=function(){return[]},r.draw=function(){this._drawData(),this.completeRender()},r.drawOnInteracting=function(){this.draw()},r._drawData=function(){var e=this.layer.getConfig(),t=this.getMap().getSize(),r=(this.prepareCanvas(),this.context);r.fillStyle=e.backgroundColor,r.fillRect(0,0,t.width,t.height),r.lineWidth=e.borderWidth,r.strokeStyle=e.borderColor,r.strokeRect(0,0,t.width,t.height)},t}(n.renderer.CanvasRenderer);function c(e){return t({baseURL:"",url:a+"/readonly-utils_maptalks-static"+e})}s.registerRenderer("canvas",l);var l=function(){function e(e,t){this._layer=void 0;t=r.merge({zIndex:1,forceRenderOnMoving:!0,forceRenderOnZooming:!0,forceRenderOnRotating:!0},t);this._layer=new n.VectorLayer(e,t)}var t=e.prototype;return t.setAreaCode=function(){s=function*(e){var r=this;yield c("/geos/"+e+"_full.json").then(function(e){var t,e=e["data"],e=(t=[],null!=(e=e)&&null!=(e=e.features)&&e.forEach(function(e){"MultiPolygon"===e.geometry.type&&(e=new n.MultiPolygon(e.geometry.coordinates,{properties:e.properties,symbol:{polygonFill:"transparent",lineWidth:1,lineColor:"#ddd"}}),t.push(e))}),t);r._layer.clear(),r._layer.addGeometry(e)})};var s,t=function(){var e=this,a=arguments;return new Promise(function(t,r){var n=s.apply(e,a);function o(e){u(n,t,r,o,i,"next",e)}function i(e){u(n,t,r,o,i,"throw",e)}o(undefined)})};return function(e){return t.apply(this,arguments)}}(),t.addTo=function(e){this._layer.addTo(e)},t.clear=function(){this._layer.clear()},t.dispose=function(){this._layer.clear().remove()},e}(),f=function(n){function e(e,t,r){e=n.call(this,e,t,r)||this;return console.log("新的"),e}return o(e,n),e}(n.VectorLayer),d=function(r){function e(e,t){return r.call(this,e,t)||this}return o(e,r),e}(n.LineString);d.registerJSONType("HeartbeatLineString"),e.BorderLayer=s,e.CityBoundry=l,e.HeartbeatLineString=d,e.OffsetLayer=f,e["default"]=function(e){a=e},Object.defineProperty(e,"__esModule",{value:!0})});
